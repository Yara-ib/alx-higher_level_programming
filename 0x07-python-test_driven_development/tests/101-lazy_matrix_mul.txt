>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

>>> lazy_matrix_mul([[1, 2], [3]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [4]])
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size

>>> lazy_matrix_mul([[1, 2], [3]], [])
Traceback (most recent call last):
...
ValueError: m_b can't be empty

>>> lazy_matrix_mul([[]], [[1, 2], [4]])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> lazy_matrix_mul(5, [[1, 2], [4]])
Traceback (most recent call last):
...
TypeError: m_a must be a list

>>> lazy_matrix_mul([8, 2], [[1, 2], [4]])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists

>>> lazy_matrix_mul([[1, 2], [4]], [8, 2])
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

>>> lazy_matrix_mul([["str", 2], [3, 4]], [[1, 2], [4]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats


>>> lazy_matrix_mul([[1, 2], [3, 4]], 3)
Traceback (most recent call last):
...
TypeError: m_b must be a list

>>> lazy_matrix_mul("Holberton", [[5, 6], [7, 8]])
Traceback (most recent call last):
...
TypeError: m_a must be a list
