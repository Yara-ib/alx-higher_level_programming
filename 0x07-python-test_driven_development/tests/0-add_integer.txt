"""The 0-add_integer module"""
>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(1, 2)
3

>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(3, None)
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer("string")
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer("string", "string2")
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(5, "string2")
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer(5+5j)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(5, 5+5j)
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer(5+5j, 1+2j)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(5+5j, x)
Traceback (most recent call last):
...
NameError: name 'x' is not defined

>>> add_integer(z, z)
Traceback (most recent call last):
...
NameError: name 'z' is not defined

>>> add_integer(1, -2)
-1

>>> add_integer(1, 0.5)
1

>>> add_integer(5.5, 5)
10

>>> add_integer(5.5, 5 * 2)
15

>>> add_integer(5.5 * 3, 5 * 2)
26

>>> add_integer(5.5 * 3, 5 ** 2)
41

>>> add_integer(1e16, 1e16)
20000000000000000

>>> add_integer(1e16)
10000000000000098

>>> add_integer(-1e16)
-9999999999999902

>>> add_integer(-1e16, 1e-4)
-10000000000000000

>>> add_integer(1e-4)
98

>>> add_integer(1e-2, 1e-1)
0

>>> add_integer(5, 0.5 ** 0.5)
5

>>> add_integer(0 ** 0.5, 0 ** 0.5)
0

Added 2 cases according to the checker:
float overflow
if b not add
